---
description: 
globs: src/**/*tsx
alwaysApply: false
---
- All components should use [Mantine](mdc:https:/mantine.dev) component library as the primary styling framework
- Use common Mantine components such as `TextInput`, `PasswordInput`, `Button`, `Paper`, `Group`, `Box`
- Component naming should use PascalCase, e.g., `LoginForm`, `UploadForm`
- Form submission should use `form.onSubmit()` to wrap callbacks, avoid handling `event.preventDefault` manually
- All important fields and buttons should include `data-testid` attributes for UI testing
- Use react-hook-form to create forms and form validation rules
- Components should maintain reusability, avoid hardcoding API calls within components, use `onSubmit` props to pass external logic
- Buttons should support `loading` state to display loading animations
- Use `@mantine/notifications` to display success or error operation prompts
- Maintain reasonable layout structure (e.g., wrap forms in `Paper`, use `mt="md"` between fields)
- Use SCSS modules to handle styles not provided by Mantine components
